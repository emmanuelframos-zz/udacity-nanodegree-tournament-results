-- TABLE PLAYER --
DROP TABLE IF EXISTS PLAYER CASCADE;

CREATE TABLE PLAYER (
    ID SERIAL,
    NAME CHARACTER VARYING(100) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL  ,
    CONSTRAINT PK_PLAYER PRIMARY KEY(ID)
);

-- TABLE TOURNAMENT --
DROP TABLE IF EXISTS TOURNAMENT CASCADE;

CREATE TABLE TOURNAMENT (
    ID SERIAL,
    NAME CHARACTER VARYING(100) NOT NULL,
    START_AT TIMESTAMP NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CONSTRAINT PK_TOURNAMENT PRIMARY KEY(ID)
);

-- TABLE MATCH --
DROP TABLE IF EXISTS MATCH CASCADE;

CREATE TABLE MATCH (
	ID SERIAL,
    ID_TOURNAMENT INTEGER,
    WINNER INTEGER,
    LOSER INTEGER,
    ROUND INTEGER NOT NULL,
    DATE TIMESTAMP NOT NULL,
    CONSTRAINT PK_MATCH PRIMARY KEY(ID),
    CONSTRAINT FK_MATCH_WINNER FOREIGN KEY (WINNER) REFERENCES PLAYER(ID),
    CONSTRAINT FK_MATCH_LOSER FOREIGN KEY(LOSER) REFERENCES PLAYER (ID)
);

-- TABLE RANK --
DROP TABLE IF EXISTS RANK CASCADE;

CREATE TABLE RANK(
    ID SERIAL,
    ID_TOURNAMENT INTEGER,
    ID_PLAYER INTEGER,
    POINTS INTEGER NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CONSTRAINT PK_RANK PRIMARY KEY (ID),
    CONSTRAINT FK_RANK_TOURNAMENT FOREIGN KEY(ID_TOURNAMENT) REFERENCES TOURNAMENT(ID),
    CONSTRAINT FK_RANK_PLAYER FOREIGN KEY(ID_PLAYER) REFERENCES PLAYER(ID)
);